// Code generated by protoc-gen-go. DO NOT EDIT.
// source: userop/proto/address.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AddressRequest struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId               int32    `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	Province             string   `protobuf:"bytes,3,opt,name=province,proto3" json:"province,omitempty"`
	City                 string   `protobuf:"bytes,4,opt,name=city,proto3" json:"city,omitempty"`
	District             string   `protobuf:"bytes,5,opt,name=district,proto3" json:"district,omitempty"`
	Address              string   `protobuf:"bytes,6,opt,name=address,proto3" json:"address,omitempty"`
	SignerName           string   `protobuf:"bytes,7,opt,name=signerName,proto3" json:"signerName,omitempty"`
	SignerMobile         string   `protobuf:"bytes,8,opt,name=signerMobile,proto3" json:"signerMobile,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddressRequest) Reset()         { *m = AddressRequest{} }
func (m *AddressRequest) String() string { return proto.CompactTextString(m) }
func (*AddressRequest) ProtoMessage()    {}
func (*AddressRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_62716dea01e2095e, []int{0}
}

func (m *AddressRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddressRequest.Unmarshal(m, b)
}
func (m *AddressRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddressRequest.Marshal(b, m, deterministic)
}
func (m *AddressRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddressRequest.Merge(m, src)
}
func (m *AddressRequest) XXX_Size() int {
	return xxx_messageInfo_AddressRequest.Size(m)
}
func (m *AddressRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddressRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddressRequest proto.InternalMessageInfo

func (m *AddressRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *AddressRequest) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *AddressRequest) GetProvince() string {
	if m != nil {
		return m.Province
	}
	return ""
}

func (m *AddressRequest) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *AddressRequest) GetDistrict() string {
	if m != nil {
		return m.District
	}
	return ""
}

func (m *AddressRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *AddressRequest) GetSignerName() string {
	if m != nil {
		return m.SignerName
	}
	return ""
}

func (m *AddressRequest) GetSignerMobile() string {
	if m != nil {
		return m.SignerMobile
	}
	return ""
}

type AddressResponse struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId               int32    `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	Province             string   `protobuf:"bytes,3,opt,name=province,proto3" json:"province,omitempty"`
	City                 string   `protobuf:"bytes,4,opt,name=city,proto3" json:"city,omitempty"`
	District             string   `protobuf:"bytes,5,opt,name=district,proto3" json:"district,omitempty"`
	Address              string   `protobuf:"bytes,6,opt,name=address,proto3" json:"address,omitempty"`
	SignerName           string   `protobuf:"bytes,7,opt,name=signerName,proto3" json:"signerName,omitempty"`
	SignerMobile         string   `protobuf:"bytes,8,opt,name=signerMobile,proto3" json:"signerMobile,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddressResponse) Reset()         { *m = AddressResponse{} }
func (m *AddressResponse) String() string { return proto.CompactTextString(m) }
func (*AddressResponse) ProtoMessage()    {}
func (*AddressResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_62716dea01e2095e, []int{1}
}

func (m *AddressResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddressResponse.Unmarshal(m, b)
}
func (m *AddressResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddressResponse.Marshal(b, m, deterministic)
}
func (m *AddressResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddressResponse.Merge(m, src)
}
func (m *AddressResponse) XXX_Size() int {
	return xxx_messageInfo_AddressResponse.Size(m)
}
func (m *AddressResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddressResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddressResponse proto.InternalMessageInfo

func (m *AddressResponse) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *AddressResponse) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *AddressResponse) GetProvince() string {
	if m != nil {
		return m.Province
	}
	return ""
}

func (m *AddressResponse) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *AddressResponse) GetDistrict() string {
	if m != nil {
		return m.District
	}
	return ""
}

func (m *AddressResponse) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *AddressResponse) GetSignerName() string {
	if m != nil {
		return m.SignerName
	}
	return ""
}

func (m *AddressResponse) GetSignerMobile() string {
	if m != nil {
		return m.SignerMobile
	}
	return ""
}

type AddressListResponse struct {
	Total                int32              `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Data                 []*AddressResponse `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *AddressListResponse) Reset()         { *m = AddressListResponse{} }
func (m *AddressListResponse) String() string { return proto.CompactTextString(m) }
func (*AddressListResponse) ProtoMessage()    {}
func (*AddressListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_62716dea01e2095e, []int{2}
}

func (m *AddressListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddressListResponse.Unmarshal(m, b)
}
func (m *AddressListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddressListResponse.Marshal(b, m, deterministic)
}
func (m *AddressListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddressListResponse.Merge(m, src)
}
func (m *AddressListResponse) XXX_Size() int {
	return xxx_messageInfo_AddressListResponse.Size(m)
}
func (m *AddressListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddressListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddressListResponse proto.InternalMessageInfo

func (m *AddressListResponse) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *AddressListResponse) GetData() []*AddressResponse {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*AddressRequest)(nil), "AddressRequest")
	proto.RegisterType((*AddressResponse)(nil), "AddressResponse")
	proto.RegisterType((*AddressListResponse)(nil), "AddressListResponse")
}

func init() { proto.RegisterFile("userop/proto/address.proto", fileDescriptor_62716dea01e2095e) }

var fileDescriptor_62716dea01e2095e = []byte{
	// 347 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x52, 0x4d, 0x4b, 0x2b, 0x31,
	0x14, 0x65, 0xa6, 0x1f, 0xd3, 0xde, 0xf7, 0xda, 0x3e, 0xf2, 0x4a, 0x09, 0x23, 0x48, 0x29, 0x2e,
	0xba, 0x4a, 0xa1, 0x2e, 0x14, 0x5c, 0xf9, 0x85, 0x08, 0x2a, 0x38, 0xe0, 0xc6, 0x5d, 0xda, 0x5c,
	0x4b, 0x60, 0xda, 0x8c, 0x49, 0x2a, 0xf4, 0xef, 0xea, 0xce, 0x5f, 0x21, 0x93, 0xcc, 0x94, 0xd6,
	0x8a, 0xe0, 0xd6, 0xd5, 0xcc, 0x39, 0xe7, 0x9e, 0xe4, 0x9e, 0x70, 0x20, 0x5e, 0x1a, 0xd4, 0x2a,
	0x1b, 0x65, 0x5a, 0x59, 0x35, 0xe2, 0x42, 0x68, 0x34, 0x86, 0x39, 0x14, 0xef, 0xcd, 0x94, 0x9a,
	0xa5, 0xe8, 0xb5, 0xc9, 0xf2, 0x69, 0x84, 0xf3, 0xcc, 0xae, 0xbc, 0x38, 0x78, 0x0d, 0xa0, 0x7d,
	0xea, 0xc7, 0x13, 0x7c, 0x5e, 0xa2, 0xb1, 0xa4, 0x0d, 0xa1, 0x14, 0x34, 0xe8, 0x07, 0xc3, 0x5a,
	0x12, 0x4a, 0x41, 0x7a, 0x50, 0xcf, 0x4f, 0xbf, 0x16, 0x34, 0x74, 0x5c, 0x81, 0x48, 0x0c, 0x8d,
	0x4c, 0xab, 0x17, 0xb9, 0x98, 0x22, 0xad, 0xf4, 0x83, 0x61, 0x33, 0x59, 0x63, 0x42, 0xa0, 0x3a,
	0x95, 0x76, 0x45, 0xab, 0x8e, 0x77, 0xff, 0xf9, 0xbc, 0x90, 0xc6, 0x6a, 0x39, 0xb5, 0xb4, 0xe6,
	0xe7, 0x4b, 0x4c, 0x28, 0x44, 0xc5, 0xd2, 0xb4, 0xee, 0xa4, 0x12, 0x92, 0x7d, 0x00, 0x23, 0x67,
	0x0b, 0xd4, 0x77, 0x7c, 0x8e, 0x34, 0x72, 0xe2, 0x06, 0x43, 0x06, 0xf0, 0xd7, 0xa3, 0x5b, 0x35,
	0x91, 0x29, 0xd2, 0x86, 0x9b, 0xd8, 0xe2, 0x06, 0x6f, 0x01, 0x74, 0xd6, 0x21, 0x4d, 0xa6, 0x16,
	0x06, 0x7f, 0x61, 0xca, 0x7b, 0xf8, 0x5f, 0x84, 0xbc, 0x91, 0xc6, 0xae, 0x83, 0x76, 0xa1, 0x66,
	0x95, 0xe5, 0x69, 0x91, 0xd5, 0x03, 0x72, 0x00, 0x55, 0xc1, 0x2d, 0xa7, 0x61, 0xbf, 0x32, 0xfc,
	0x33, 0xfe, 0xc7, 0x3e, 0x3d, 0x4f, 0xe2, 0xd4, 0xf1, 0x7b, 0x00, 0x51, 0xa1, 0x90, 0x23, 0x68,
	0x5f, 0xa1, 0xdd, 0xb8, 0x81, 0x74, 0xd8, 0x76, 0x73, 0xe2, 0x2e, 0xfb, 0x6a, 0x81, 0x31, 0xb4,
	0xce, 0x35, 0x72, 0x8b, 0xe5, 0x49, 0x3b, 0xbe, 0x9d, 0xeb, 0xc9, 0x31, 0xb4, 0x2e, 0x30, 0xc5,
	0x6f, 0x3c, 0x3d, 0xe6, 0x6b, 0xcd, 0xca, 0x5a, 0xb3, 0xcb, 0xbc, 0xd6, 0xb9, 0xf3, 0x21, 0x13,
	0xfc, 0xe7, 0xce, 0xb3, 0xe6, 0x63, 0xc4, 0x4e, 0x3c, 0x57, 0x77, 0x9f, 0xc3, 0x8f, 0x00, 0x00,
	0x00, 0xff, 0xff, 0xaa, 0xe9, 0x30, 0x15, 0x57, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AddressClient is the client API for Address service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AddressClient interface {
	GetAddressList(ctx context.Context, in *AddressRequest, opts ...grpc.CallOption) (*AddressListResponse, error)
	CreateAddress(ctx context.Context, in *AddressRequest, opts ...grpc.CallOption) (*AddressResponse, error)
	DeleteAddress(ctx context.Context, in *AddressRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	UpdateAddress(ctx context.Context, in *AddressRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
}

type addressClient struct {
	cc *grpc.ClientConn
}

func NewAddressClient(cc *grpc.ClientConn) AddressClient {
	return &addressClient{cc}
}

func (c *addressClient) GetAddressList(ctx context.Context, in *AddressRequest, opts ...grpc.CallOption) (*AddressListResponse, error) {
	out := new(AddressListResponse)
	err := c.cc.Invoke(ctx, "/Address/GetAddressList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *addressClient) CreateAddress(ctx context.Context, in *AddressRequest, opts ...grpc.CallOption) (*AddressResponse, error) {
	out := new(AddressResponse)
	err := c.cc.Invoke(ctx, "/Address/CreateAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *addressClient) DeleteAddress(ctx context.Context, in *AddressRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/Address/DeleteAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *addressClient) UpdateAddress(ctx context.Context, in *AddressRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/Address/UpdateAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AddressServer is the server API for Address service.
type AddressServer interface {
	GetAddressList(context.Context, *AddressRequest) (*AddressListResponse, error)
	CreateAddress(context.Context, *AddressRequest) (*AddressResponse, error)
	DeleteAddress(context.Context, *AddressRequest) (*emptypb.Empty, error)
	UpdateAddress(context.Context, *AddressRequest) (*emptypb.Empty, error)
}

// UnimplementedAddressServer can be embedded to have forward compatible implementations.
type UnimplementedAddressServer struct {
}

func (*UnimplementedAddressServer) GetAddressList(ctx context.Context, req *AddressRequest) (*AddressListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAddressList not implemented")
}
func (*UnimplementedAddressServer) CreateAddress(ctx context.Context, req *AddressRequest) (*AddressResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAddress not implemented")
}
func (*UnimplementedAddressServer) DeleteAddress(ctx context.Context, req *AddressRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAddress not implemented")
}
func (*UnimplementedAddressServer) UpdateAddress(ctx context.Context, req *AddressRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateAddress not implemented")
}

func RegisterAddressServer(s *grpc.Server, srv AddressServer) {
	s.RegisterService(&_Address_serviceDesc, srv)
}

func _Address_GetAddressList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddressServer).GetAddressList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Address/GetAddressList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddressServer).GetAddressList(ctx, req.(*AddressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Address_CreateAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddressServer).CreateAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Address/CreateAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddressServer).CreateAddress(ctx, req.(*AddressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Address_DeleteAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddressServer).DeleteAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Address/DeleteAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddressServer).DeleteAddress(ctx, req.(*AddressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Address_UpdateAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddressServer).UpdateAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Address/UpdateAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddressServer).UpdateAddress(ctx, req.(*AddressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Address_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Address",
	HandlerType: (*AddressServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAddressList",
			Handler:    _Address_GetAddressList_Handler,
		},
		{
			MethodName: "CreateAddress",
			Handler:    _Address_CreateAddress_Handler,
		},
		{
			MethodName: "DeleteAddress",
			Handler:    _Address_DeleteAddress_Handler,
		},
		{
			MethodName: "UpdateAddress",
			Handler:    _Address_UpdateAddress_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "userop/proto/address.proto",
}
